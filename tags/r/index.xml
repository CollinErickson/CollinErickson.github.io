<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Collin Erickson</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Collin Erickson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using active bindings in R6 classes</title>
      <link>/2018/01/10/using-active-bindings-in-r6-classes/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/10/using-active-bindings-in-r6-classes/</guid>
      <description>I’ve used R6 classes in a lot of my R projects in recent years. They are easier to understand than S3 and S4 objects if you’ve ever done programming with objects in other languages. I also am still not sure how I can have functions act on data in an S3 object. I think it’s not possible, but I’m really not sure. And R6 classes are definitely better than RC objects.</description>
    </item>
    
    <item>
      <title>Using Snippets in RStudio as Keyboard Shortcuts</title>
      <link>/2017/12/04/using-snippets-in-rstudio-as-keyboard-shortcuts/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/04/using-snippets-in-rstudio-as-keyboard-shortcuts/</guid>
      <description>Code Snippets are a useful feature of RStudio that many people don’t know about. The RStudio Blog post gives good instructions on how they can be used, but I thought I’d share how I use them.
Here are some of the ways I use snippets:
Loading MagrittrOne of my favorite R functions is the pipe operator, %&amp;gt;%, from the Magrittr package. There’s already a keyboard shortcut, Ctrl+Shift+M, for this function.</description>
    </item>
    
    <item>
      <title>How profvis helped give a 2x speedup by changing a single function call (answer: data frames can be really slow)</title>
      <link>/2017/11/24/how-profvis-helped-give-a-2x-speedup-by-changing-a-single-function-call-answer-data-frames-can-be-really-slow/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/24/how-profvis-helped-give-a-2x-speedup-by-changing-a-single-function-call-answer-data-frames-can-be-really-slow/</guid>
      <description>Recently I’ve been running computationally intensive simulations that take up to six hours each. This is prohibitively slow, and is assuredly suboptimal since I coded it all, so I decided to do a time profile evaluation to find the bottlenecks in the code. This is easily done in R using the eponymous function from the package profvis.
The following example shows how to use profvis.</description>
    </item>
    
  </channel>
</rss>