<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Collin Erickson</title>
    <link>/post/</link>
    <description>Recent content in Posts on Collin Erickson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How I create a new post using Hugo, RStudio, and Git</title>
      <link>/2017/12/11/how-i-create-a-new-post-using-hugo-rstudio-and-git/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/11/how-i-create-a-new-post-using-hugo-rstudio-and-git/</guid>
      <description>I am writing this because I forget myself how to do this. I set up this blog through GitHub following the instructions provided by Robert Myles. Now when I want to make a new post I do the following
1. Opened RStudio to my website-hugo project.2. Create a new postThe posts are created and built using the R package blogdown. To create the new post, I use blogdown::new_post(title=&#39;&amp;lt;insert post name here&amp;gt;&#39;, ext=&#39;.</description>
    </item>
    
    <item>
      <title>Using Snippets in RStudio as Keyboard Shortcuts</title>
      <link>/2017/12/04/using-snippets-in-rstudio-as-keyboard-shortcuts/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/04/using-snippets-in-rstudio-as-keyboard-shortcuts/</guid>
      <description>Code Snippets are a useful feature of RStudio that many people don’t know about. The RStudio Blog post gives good instructions on how they can be used, but I thought I’d share how I use them.
Here are some of the ways I use snippets:
Loading MagrittrOne of my favorite R functions is the pipe operator, %&amp;gt;%, from the Magrittr package. There’s already a keyboard shortcut, Ctrl+Shift+M, for this function.</description>
    </item>
    
    <item>
      <title>How profvis helped give a 2x speedup by changing a single function call (answer: data frames can be really slow)</title>
      <link>/2017/11/24/how-profvis-helped-give-a-2x-speedup-by-changing-a-single-function-call-answer-data-frames-can-be-really-slow/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/24/how-profvis-helped-give-a-2x-speedup-by-changing-a-single-function-call-answer-data-frames-can-be-really-slow/</guid>
      <description>Recently I’ve been running computationally intensive simulations that take up to six hours each. This is prohibitively slow, and is assuredly suboptimal since I coded it all, so I decided to do a time profile evaluation to find the bottlenecks in the code. This is easily done in R using the eponymous function from the package profvis.
The following example shows how to use profvis.</description>
    </item>
    
    <item>
      <title>Getting Rcpp to work with my R package</title>
      <link>/2017/08/05/getting-rcpp-to-work-with-my-r-package/</link>
      <pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/05/getting-rcpp-to-work-with-my-r-package/</guid>
      <description>I’ve been using Rcpp in my R package GauPro for over a year. I had it working with no errors/warnings/notes in the package check for a long time, but for the last half year I’ve kept getting the same note, shown below.
checking compiled code ... NOTEFile &amp;#39;GauPro/libs/x64/GauPro.dll&amp;#39;:Found no calls to: &amp;#39;R_registerRoutines&amp;#39;, &amp;#39;R_useDynamicSymbols&amp;#39;It is good practice to register native routines and to disable symbolsearch.See &amp;#39;Writing portable packages&amp;#39; in the &amp;#39;Writing R Extensions&amp;#39; manual.</description>
    </item>
    
    <item>
      <title>Running TensorBoard on Windows</title>
      <link>/2017/08/03/running-tensorboard-on-windows/</link>
      <pubDate>Thu, 03 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/03/running-tensorboard-on-windows/</guid>
      <description>## NULLI have TensorFlow on my Windows 7 laptop and want to get Tensorboard to work. I’m hoping I can just follow the basic tutorial and get it to work, but usually some bugs will come up so I’m documenting the process.
To begin I open an Anaconda Prompt and enter activate tensorflow, to activate the environment I created for TensorFlow.
I am following the demo here, so I run the MNIST model file which can be found here.</description>
    </item>
    
    <item>
      <title>Creating a gray box neural network in TensorFlow</title>
      <link>/2017/08/01/creating-a-gray-box-neural-network-in-tensorflow/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/01/creating-a-gray-box-neural-network-in-tensorflow/</guid>
      <description>Generally neural networks act as black boxes. The input goes in, you get output, and there is interpretation of the data that helps you understand the model.
A gray box means that we impose structure on the internal structure of the neural network, so that after the model is fit we can look at the estimated parameters and they will tell us something useful.
One way we can do this is to encode an equation that we want to use near the end of the neural network.</description>
    </item>
    
    <item>
      <title>Getting started with TensorFlow in R</title>
      <link>/2017/08/01/getting-started-with-tensorflow-in-r/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/01/getting-started-with-tensorflow-in-r/</guid>
      <description>I have installed TensorFlow on my Windows laptop, and it appears to work using Python. I’m a heavy R user, so I’d like to be able to run TensorFlow through R (and RStudio).
First I installed the tensorflow library
install.packages(&amp;#39;tensorflow&amp;#39;)library(tensorflow)This warned me that my version of R wasn’t up to date. I updated R to 3.4.1 and RStudio to 1.0.153 to make sure that everything is the current version.</description>
    </item>
    
    <item>
      <title>Getting started with TensorFlow on Windows</title>
      <link>/2017/08/01/getting-started-with-tensorflow-on-windows/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/01/getting-started-with-tensorflow-on-windows/</guid>
      <description>I have wanted to try using TensorFlow for a while since it is very popular, and I think it might be able to solve a problem I’m working on this summer. I have a Windows 7 laptop, so I’ll be detailing the installation process for TensorFlow on a Windows computer.
This is mostly for my own reference purposes, you will learn nothing by reading this. I’m just following the details provided by TensorFlow here https://www.</description>
    </item>
    
    <item>
      <title>Setting up a GitHub blog for R users</title>
      <link>/2017/05/26/setting-up-a-github-blog-for-r-users/</link>
      <pubDate>Fri, 26 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/26/setting-up-a-github-blog-for-r-users/</guid>
      <description>A while back I tried to set up a GitHub blog following instructions using Jekyll and Ruby, which seems to be the recommended method by GitHub. I had lots of trouble following tutorials and getting it to work, and eventually abandoned it.
Recently I tried again, after finding out that I can do it through RStudio, using the R package blogdown. I followed the instructions provided by Robert Myles, and it seems to be working fine so far.</description>
    </item>
    
  </channel>
</rss>